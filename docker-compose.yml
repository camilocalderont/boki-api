services:
  # ==========================================
  # MongoDB Database
  # ==========================================
  mongo_db:
    image: mongo:7-jammy
    container_name: mongo_boki
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: boki_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - boki-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ==========================================
  # API Backend (NestJS)
  # ==========================================
  boki-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: boki-api
    restart: unless-stopped
    ports:
      - "${PORT_API:-3000}:3000"
    environment:
      NODE_ENV: production
      API_VERSION: ${API_VERSION:-1}
      
      # API Configuration
      API_URL: ${API_URL:-http://localhost}
      PORT_API: ${PORT_API:-3000}
      API_TOKEN: ${API_TOKEN}

      # PostgreSQL
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST:-72.60.65.174}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT:-5433}
      POSTGRES_DB_USER: ${POSTGRES_DB_USER:-soler}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD:-SO5!2025}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME:-boki}

      # MongoDB interno
      MONGO_URI: mongodb://admin:admin123@mongo_db:27017/boki_mongo?authSource=admin

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # OpenAI/LLM
      LLM_APIKEY: ${LLM_APIKEY}
      LLM_MODEL: ${LLM_MODEL:-gpt-4o-mini}

      # Meta WhatsApp
      META_BOT_TOKEN: ${META_BOT_TOKEN}
      META_NUMBER_ID: ${META_NUMBER_ID}
      META_VERIFY_TOKEN: ${META_VERIFY_TOKEN:-Bokibot}
      META_VERSION: ${META_VERSION:-22.0}

      # Twilio (opcional)
      ACC_SID: ${ACC_SID}
      ACC_TOKEN: ${ACC_TOKEN}
      ACC_VENDOR: ${ACC_VENDOR}

      # Bot Configuration
      PORT: ${PORT:-3008}

    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      mongo_db:
        condition: service_healthy
    networks:
      - boki-network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

# ==========================================
# Volumes
# ==========================================
volumes:
  mongo_data:
    driver: local
    name: boki_mongo_data
  mongo_config:
    driver: local
    name: boki_mongo_config

# ==========================================
# Networks
# ==========================================
networks:
  boki-network:
    driver: bridge
    name: boki-network